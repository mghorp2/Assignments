# calcualting centroids
centroid1 <- c(mean(df[Y == 1, 1]), mean(df[Y == 1, 2]))
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
Y <- c(2, 2, 2, 1, 1, 1)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
df$Y <- c(2, 2, 2, 1, 1, 1)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
df$Y
df
df$Y <- c(2, 2, 2, 1, 1, 1)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(1)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
# calcualting centroids
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
df$Y <- c(2, 2, 2, 1, 1, 1)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(10)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
# calcualting centroids
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
df$Y <- c(2, 2, 2, 1, 1, 1)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(10)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(42)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(24)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
set.seed(2)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
set.seed(4)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
set.seed(3)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
centroid1
centroid2
df$Y <- c(1, 1, 1,2, 2, 2)
plot(df$x1,df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
df$lables<-NA
df$lables <- c("Red","Red", "Red","Green","Green","Green")
df
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
centroid1
centroid2
plot(df$x1,df$x2, col=(labels + 1), pch = 20, cex = 2)
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2)
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
#part d
library(class)
#part a
x1<-c(1, 1, 0, 5, 6, 4)
x2<-c(4, 3, 4, 1, 2, 0)
df <- as.data.frame(cbind(x1,x2))
plot(df$x1,df$x2,xlab = "x1",ylab = "x2")
#part b
set.seed(3)
df$Y<-NA
df$Y <- sample(2, nrow(df), replace = T)
df
plot(df$x1, df$x2, col = (df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
#part c
# calcualting centroids
centroid1 <- c(mean(df[df$Y == 1, 1]), mean(df[df$Y == 1, 2]))
centroid2 <- c(mean(df[df$Y == 2, 1]), mean(df[df$Y == 2, 2]))
plot(df$x1,df$x2, col=(df$Y + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
#part d
library(class)
clusters = knn(centroids[,2:3], df, factor(centroids[,1]))
clusters
centroids = aggregate(df, list(Cluster = df), mean)
centroids = aggregate(x1,x2, list(Cluster = df), mean)
centroids = rbind(centroid1,centroid2)
centroids
centroids = rbind(centroid1,centroid2)
centroids$l<-NA
centroids$l<-c("1","2")
centroids
centroids = data.frame(rbind(centroid1,centroid2))
centroids$l<-NA
centroids$l<-c("1","2")
centroids
centroids = data.frame(rbind(centroid1,centroid2))
centroids$l<-NA
centroids$l<-as.factor(c("1","2"))
centroids
library(class)
clusters = knn(centroids[,3], df, factor(centroids[,3]))
clusters
clusters = knn(centroids[,3], df[,1:2], factor(centroids[,3]))
centroids = aggregate(df[,1:2], list(Cluster = df$Y), mean)
centroids
library(class)
clusters = knn(centroids[,2:3], df[,1:2], factor(centroids[,1]))
clusters
plot(df$x1,df$x2, col = (clusters + 1), pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
col = rep("red", n)
col[clusters == 2] = "blue"
pch = rep(16, n)
pch[clusters == 2] = 17
plot(df[,1:2], col = col, pch = pch)
n=6
col = rep("red", n)
col[clusters == 2] = "blue"
pch = rep(16, n)
pch[clusters == 2] = 17
plot(df[,1:2], col = col, pch = pch)
n=6
col = rep("red", n)
col[clusters == 2] = "blue"
pch = rep(4, n)
pch[clusters == 2] = 17
plot(df[,1:2], col = col, pch = pch)
plot(df[,1:2], col = col, pch = 4)
plot(df[,1:2], col = col, pch = 20, cex = 2,xlab = "x1",ylab = "x2")
points(centroid1[1], centroid1[2], col = 2, pch = 4)
points(centroid2[1], centroid2[2], col = 3, pch = 4)
set.seed(30)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T) + 6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T) + 12)
y = rep(c(1, 2, 3), c(20, 20, 20))
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
y
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
k_means_clus_2 = kmeans(X, centers = 2)
table(y, k_means_clus_2$cluster)
k_means_clus_4 = kmeans(X, centers = 4)
table(y, k_means_clus_4$cluster)
pca
k_means_pca_3 = kmeans(pca$x[,1:2], centers = 3)
table(y, k_means_pca_3$cluster)
y = rep(c(2, 1, 3), c(20, 20, 20))
plot(pca$x[,1:2], col = y)
table(y, k_means_cluster$cluster)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
table(y, k_means_pca_3$cluster)
X.scaled = scale(X)
k_scaled = kmeans(X.scaled, centers = 3)
table(Y, k_scaled$cluster)
k_scaled
table(y, k_scaled$cluster)
k_means_cluster = kmeans(X, centers = 3,nstart = 20)
table(y, k_means_cluster$cluster)
y = rep(c(2, 1, 3), c(20, 20, 20))
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
set.seed(30)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T) + 6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T) + 12)
y = rep(c(1, 2, 3), c(20, 20, 20))
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
k_means_clus_2 = kmeans(X, centers = 2)
table(y, k_means_clus_2$cluster)
#part e
k_means_clus_4 = kmeans(X, centers = 4)
table(y, k_means_clus_4$cluster)
k_means_pca_3 = kmeans(pca$x[,1:2], centers = 3)
table(y, k_means_pca_3$cluster)
X.scaled = scale(X)
k_scaled = kmeans(X.scaled, centers = 3)
table(y, k_scaled$cluster)
X.scaled = scale(X)
k_scaled = kmeans(X.scaled, centers = 3.nstart=20)
table(y, k_scaled$cluster)
X_scaled = scale(X)
k_scaled = kmeans(X_scaled, centers = 3.nstart=20)
table(y, k_scaled$cluster)
k_scaled = kmeans(scale(X), centers = 3.nstart=20)
table(y, k_scaled$cluster)
k_scaled = kmeans(scale(X), centers = 3,nstart=20)
table(y, k_scaled$cluster)
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
set.seed(30)
x1<-x <- matrix(rnorm(20 * 3 * 50, mean = 0, sd = 0.001), ncol = 50)
x[1:20, 2] <- 1
x[21:40, 1] <- 2
x[21:40, 2] <- 2
x[41:60, 1] <- 1
k_means_cluster = kmeans(x1, centers = 3)
table(y, k_means_cluster$cluster)
k_scale = kmeans(scale(X1), centers = 3)
table(y, k_scale$cluster)
k_scale = kmeans(scale(x1), centers = 3)
table(y, k_scale$cluster)
X
matrix(rnorm(2 * 5), nrow = 20, byrow = T) + 6
rbind(matrix(rnorm(2 * 5), nrow = 20, byrow = T) + 6)
set.seed(30)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T))
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
library(ISLR)
library(caret)
library(e1071)
auto<-data.frame(Auto)
str(auto)
summary(auto)
median_mpg<-median(auto$mpg)
auto$mpg_l<-NA
for (i in 1:nrow(auto)){
if(auto$mpg[i]>=median_mpg){
auto$mpg_l[i]<-1}
else
{auto$mpg_l[i]<-0}
}
auto$mpg_l<-as.factor(auto$mpg_l)
head(auto,2)
set.seed(1)
tune.out <- tune(svm, mpg_l ~ ., data = auto, kernel = "linear", ranges = list(cost = c(0.01, 0.1, 1, 5, 10, 100, 1000)))
summary(tune.out)
pred=predict(tune.out$best.model,auto)
conf_matrix_linear<-confusionMatrix(pred,auto$mpg)
conf_matrix_linear
pred=predict(tune.out$best.model,auto)
conf_matrix_linear<-confusionMatrix(pred,auto$mpg_l)
conf_matrix_linear
set.seed(1)
tune.out_rad <- tune(svm, mpg_l ~ ., data = auto, kernel = "radial", ranges = list(cost = c(0.01, 0.1, 1, 5, 10, 100),gamma=c(0.5,1,2,3,4)))
summary(tune.out_rad)
pred_rad=predict(tune.out_rad$best.model,auto)
conf_matrix_rad<-confusionMatrix(pred_rad,auto$mpg_l)
conf_matrix_rad
set.seed(1)
tune.out_poly <- tune(svm, mpg_l ~ ., data = auto, kernel = "polynomial", ranges = list(cost = c(0.01, 0.1, 1, 5, 10, 100), degree = c(2, 3, 4)))
summary(tune.out_poly)
pred_poly=predict(tune.out_poly$best.model,auto)
conf_matrix_poly<-confusionMatrix(pred_poly,auto$mpg_l)
conf_matrix_poly
# linear Plots
plot(tune.out, auto, mpg ~ acceleration)
# linear Plots
plot(tune.out, auto, mpg_l ~ acceleration)
svm.linear <- svm(mpg_l ~ ., data = auto, kernel = "linear", cost = 1)
svm.poly <- svm(mpg_l ~ ., data = auto, kernel = "polynomial", cost = 100, degree = 2)
svm.radial <- svm(mpg_l ~ ., data = auto, kernel = "radial", cost = 100, gamma = 0.01)
plotpairs = function(fit) {
for (name in names(auto)[!(names(auto) %in% c("mpg", "mpg_l", "name"))]) {
plot(fit, auto, as.formula(paste("mpg~", name, sep = "")))
}
}
plotpairs(svm.linear)
plotpair(tune.out)
plot(svm.linear, auto, mpg_l ~ displacement)
plot(svm.linear, auto, mpg ~ displacement)
# linear Plots
plot(svm.linear, auto, mpg ~ acceleration)
# Radial Plots
plot(svm.radial, auto, mpg ~ acceleration)
# Radial Plots
plot(svm.radial, auto, mpg ~ acceleration)
plot(svm.radial, auto, mpg ~ displacement)
plot(svm.radial, auto, mpg ~ horsepower)
plot(svm.radial, auto, mpg ~ cylinders)
plot(svm.radial, auto, mpg ~ weight)
plot(svm.radial, auto, mpg ~ year)
set.seed(30)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
y = rep(c(1, 2, 3), c(20, 20, 20))
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
set.seed(2)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
#part d
k_means_clus_2 = kmeans(X, centers = 2)
table(y, k_means_clus_2$cluster)
#part e
k_means_clus_4 = kmeans(X, centers = 4)
table(y, k_means_clus_4$cluster)
#part f
k_means_pca_3 = kmeans(pca$x[,1:2], centers = 3)
table(y, k_means_pca_3$cluster)
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
set.seed(5)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
set.seed(500)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+12)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+6,
matrix(rnorm(20 * 50), nrow = 20, byrow = T)+1)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T),
matrix(rnorm(20 * 50), nrow = 20, byrow = T))
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50),mean=0, nrow = 20, byrow = T),
matrix(rnorm(20 * 50), mean=1,nrow = 20, byrow = T),
matrix(rnorm(20 * 50), mean=3,nrow = 20, byrow = T))
y = rep(c(1, 2, 3), c(20, 20, 20))
set.seed(50)
X = rbind(matrix(rnorm(20 * 50),nrow = 20, byrow = T),
matrix(rnorm(20 * 50),nrow = 20, byrow = T),
matrix(rnorm(20 * 50),nrow = 20, byrow = T)+1)
y = rep(c(1, 2, 3), c(20, 20, 20))
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50),nrow = 20, byrow = T),
matrix(rnorm(20 * 50),nrow = 20, byrow = T)+20,
matrix(rnorm(20 * 50),nrow = 20, byrow = T)+1)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
set.seed(50)
X = rbind(matrix(rnorm(20 * 50),nrow = 20, byrow = T),
matrix(rnorm(20 * 50),nrow = 20, byrow = T)+2,
matrix(rnorm(20 * 50),nrow = 20, byrow = T)+1)
y = rep(c(1, 2, 3), c(20, 20, 20))
#part b
pca = prcomp(X)
plot(pca$x[,1:2], col = y)
#part c
k_means_cluster = kmeans(X, centers = 3)
table(y, k_means_cluster$cluster)
#part g
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
k_scale = kmeans(scale(X), centers = 2)
table(y, k_scale$cluster)
k_scale = kmeans(scale(X), centers = 3)
table(y, k_scale$cluster)
