summary(knn_1)
# Part 2: K-nearest neighbor
library(class)
knn_1_train<-knn(train=zipTrain[,2:257],test=zipTrain[,2:257],cl = as.factor(zipTrain$X1),k=1) # Knn model for K=1
knn_1_pred <- as.numeric(as.character(knn_1_train))
knn_act = zipTrain$X1
table(knn_1_train,zipTrain$X1) # plotting confusion matrix for Knn=1 training data
RMSE_1_train <- mean(knn_act != knn_1_pred) #Errro rate of Training for K=1
print(RMSE_1_train)
knn_1<-knn(train=zipTrain[,2:257],test=zipTest[,2:257],cl = as.factor(zipTrain$X1),k=1) # Knn model for K=1
knn_1_predict <- as.numeric(as.character(knn_1))
summary(knn_1)
# Read Dataset
library(readr)
zip_test <- read_delim("D:/UIC/Fall 2017/Advance stats/Assignments/Assignment1/zip.test.gz",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(zip_test)
library(readr)
zip_train <- read_delim("D:/UIC/Fall 2017/Advance stats/Assignments/Assignment1/zip.train.gz",
" ", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
#View(zip_train)
zip_train <- zip_train[,1:257]    # cleaning the data
zipTrain <- subset(zip_train,subset=X1%in%c(2,3)) #Considering 2's and 3's
#View(zipTrain)
zipTest <- subset(zip_test,subset=X1%in%c(2,3))   #Considering 2's and 3's
#view(zipTest)
# Part 1: Linear Regresion
zip_Model <- lm(X1 ~ ., zipTrain) # Linear Regression model
#print(zip_Model$coefficients)
summary(zip_Model)
par(mfrow = c(2,2))
plot(zip_Model)
X1_pred_train<- predict(zip_Model, zipTrain)
X1_actual_train = zipTrain$X1
X1_train <- sqrt(mean((X1_actual_train - X1_pred_train)^2))          #RMSE Training
print(X1_train)
X1pred<-sapply(X1_pred_train,function(X1_pred_train)(if (X1_pred_train >2.5 )3 else 2))
table(X1pred,zipTrain$X1)                                            # plotting confusion matrix for training
X1_predict<- predict(zip_Model, zipTest)
X1_actual = zipTest$X1
X1_test <- sqrt(mean((X1_actual - X1_predict)^2)) #RMSE Test
print(X1_test)
X1pred_test<- sapply(X1_predict,function(X1_predict)(if (X1_predict >2.5 )3 else 2))
table(X1pred_test,zipTest$X1)                                   # plotting confusion matrix for test
# Part 2: K-nearest neighbor
library(class)
knn_1_train<-knn(train=zipTrain[,2:257],test=zipTrain[,2:257],cl = as.factor(zipTrain$X1),k=1) # Knn model for K=1
knn_1_pred <- as.numeric(as.character(knn_1_train))
knn_act = zipTrain$X1
table(knn_1_train,zipTrain$X1) # plotting confusion matrix for Knn=1 training data
RMSE_1_train <- mean(knn_act != knn_1_pred) #Errro rate of Training for K=1
print(RMSE_1_train)
knn_1<-knn(train=zipTrain[,2:257],test=zipTest[,2:257],cl = as.factor(zipTrain$X1),k=1) # Knn model for K=1
knn_1_predict <- as.numeric(as.character(knn_1))
summary(knn_1)
knn_actual = zipTest$X1
table(knn_1,zipTest$X1) # plotting confusion matrix for Knn=1 test data
RMSE_1_test <- mean(knn_actual != knn_1_predict) #Errro rate of Test for K=1
print(RMSE_1_test)
